/*
 * Copyright 2011-2013 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package example.avro.search;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class PersistException extends org.apache.avro.specific.SpecificExceptionBase implements org.apache.avro.specific.SpecificRecord {
    public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"error\",\"name\":\"PersistException\",\"namespace\":\"example.avro.search\",\"fields\":[{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"code\",\"type\":\"int\",\"default\":-1}]}");

    public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

    @Deprecated public java.lang.CharSequence message$;
    @Deprecated public int code;

    public PersistException() {
        super();
    }

    public PersistException(Object value) {
        super(value);
    }

    public PersistException(Throwable cause) {
        super(cause);
    }

    public PersistException(Object value, Throwable cause) {
        super(value, cause);
    }

    public org.apache.avro.Schema getSchema() { return SCHEMA$; }

    // Used by DatumWriter.  Applications should not call.
    public java.lang.Object get(int field$) {
        switch (field$) {
            case 0:
                return message$;
            case 1:
                return code;
            default:
                throw new org.apache.avro.AvroRuntimeException("Bad index");
        }
    }

    // Used by DatumReader.  Applications should not call.
    @SuppressWarnings(value = "unchecked")
    public void put(int field$, java.lang.Object value$) {
        switch (field$) {
            case 0:
                message$ = (java.lang.CharSequence) value$;
                break;
            case 1:
                code = (java.lang.Integer) value$;
                break;
            default:
                throw new org.apache.avro.AvroRuntimeException("Bad index");
        }
    }

    /** Gets the value of the 'message$' field. */
    public java.lang.CharSequence getMessage$() {
        return message$;
    }

    /**
     * Sets the value of the 'message$' field.
     *
     * @param value the value to set.
     */
    public void setMessage$(java.lang.CharSequence value) {
        this.message$ = value;
    }

    /** Gets the value of the 'code' field. */
    public java.lang.Integer getCode() {
        return code;
    }

    /**
     * Sets the value of the 'code' field.
     *
     * @param value the value to set.
     */
    public void setCode(java.lang.Integer value) {
        this.code = value;
    }

    /** Creates a new PersistException RecordBuilder */
    public static example.avro.search.PersistException.Builder newBuilder() {
        return new example.avro.search.PersistException.Builder();
    }

    /** Creates a new PersistException RecordBuilder by copying an existing Builder */
    public static example.avro.search.PersistException.Builder newBuilder(example.avro.search.PersistException.Builder other) {
        return new example.avro.search.PersistException.Builder(other);
    }

    /** Creates a new PersistException RecordBuilder by copying an existing PersistException instance */
    public static example.avro.search.PersistException.Builder newBuilder(example.avro.search.PersistException other) {
        return new example.avro.search.PersistException.Builder(other);
    }

    /** RecordBuilder for PersistException instances. */
    public static class Builder extends org.apache.avro.specific.SpecificErrorBuilderBase<PersistException>
            implements org.apache.avro.data.ErrorBuilder<PersistException> {

        private java.lang.CharSequence message$;
        private int code;

        /** Creates a new Builder */
        private Builder() {
            super(example.avro.search.PersistException.SCHEMA$);
        }

        /** Creates a Builder by copying an existing Builder */
        private Builder(example.avro.search.PersistException.Builder other) {
            super(other);
        }

        /** Creates a Builder by copying an existing PersistException instance */
        private Builder(example.avro.search.PersistException other) {
            super(other);
            if (isValidValue(fields()[0], other.message$)) {
                this.message$ = data().deepCopy(fields()[0].schema(), other.message$);
                fieldSetFlags()[0] = true;
            }
            if (isValidValue(fields()[1], other.code)) {
                this.code = data().deepCopy(fields()[1].schema(), other.code);
                fieldSetFlags()[1] = true;
            }
        }

        @Override
        public example.avro.search.PersistException.Builder setValue(Object value) {
            super.setValue(value);
            return this;
        }

        @Override
        public example.avro.search.PersistException.Builder clearValue() {
            super.clearValue();
            return this;
        }

        @Override
        public example.avro.search.PersistException.Builder setCause(Throwable cause) {
            super.setCause(cause);
            return this;
        }

        @Override
        public example.avro.search.PersistException.Builder clearCause() {
            super.clearCause();
            return this;
        }

        /** Gets the value of the 'message$' field */
        public java.lang.CharSequence getMessage$() {
            return message$;
        }

        /** Sets the value of the 'message$' field */
        public example.avro.search.PersistException.Builder setMessage$(java.lang.CharSequence value) {
            validate(fields()[0], value);
            this.message$ = value;
            fieldSetFlags()[0] = true;
            return this;
        }

        /** Checks whether the 'message$' field has been set */
        public boolean hasMessage$() {
            return fieldSetFlags()[0];
        }

        /** Clears the value of the 'message$' field */
        public example.avro.search.PersistException.Builder clearMessage$() {
            message$ = null;
            fieldSetFlags()[0] = false;
            return this;
        }

        /** Gets the value of the 'code' field */
        public java.lang.Integer getCode() {
            return code;
        }

        /** Sets the value of the 'code' field */
        public example.avro.search.PersistException.Builder setCode(int value) {
            validate(fields()[1], value);
            this.code = value;
            fieldSetFlags()[1] = true;
            return this;
        }

        /** Checks whether the 'code' field has been set */
        public boolean hasCode() {
            return fieldSetFlags()[1];
        }

        /** Clears the value of the 'code' field */
        public example.avro.search.PersistException.Builder clearCode() {
            fieldSetFlags()[1] = false;
            return this;
        }

        @Override
        public PersistException build() {
            try {
                PersistException record = new PersistException(getValue(), getCause());
                record.message$ = fieldSetFlags()[0] ? this.message$ : (java.lang.CharSequence) defaultValue(fields()[0]);
                record.code = fieldSetFlags()[1] ? this.code : (java.lang.Integer) defaultValue(fields()[1]);
                return record;
            } catch (Exception e) {
                throw new org.apache.avro.AvroRuntimeException(e);
            }
        }
    }
}
