<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd">

    <jdbc:embedded-database id="dataSource" type="HSQL"/>

    <bean id="updateTimestampedInterceptor" class="kr.debop4j.data.hibernate.interceptor.UpdateTimestampedInterceptor"/>

    <bean id="updateTimestampedListener" class="kr.debop4j.data.hibernate.listener.UpdateTimestampedEventListener"/>

    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="entityInterceptor" ref="updateTimestampedInterceptor"/>
        <property name="configLocation" value="spring-hibernate.cfg.xml"/>
        <property name="packagesToScan">
            <list>
                <value>kr.debop4j.data.mapping.model.annotated</value>
                <value>kr.debop4j.data.mapping.model.annotated.collection</value>
                <value>kr.debop4j.data.mapping.model.annotated.join</value>
                <value>kr.debop4j.data.mapping.model.annotated.joinedSubclass</value>
                <value>kr.debop4j.data.mapping.model.annotated.onetomany</value>
                <value>kr.debop4j.data.mapping.model.annotated.onetoone</value>
                <value>kr.debop4j.data.mapping.model.annotated.subclass</value>
                <value>kr.debop4j.data.mapping.model.annotated.unionSubclass</value>
                <value>kr.debop4j.data.mapping.model.annotated.usertypes</value>

                <value>kr.debop4j.data.hibernate.search.model</value>
            </list>
        </property>
    </bean>

    <!-- 예제 외에는 이 것을 사용하지 않고, session의 beginTransaction, commit, rollback 을 사용한다 -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="unitOfWorkFactory" class="kr.debop4j.data.hibernate.unitofwork.UnitOfWorkFactory">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="hibernateDaoFactory" class="kr.debop4j.data.hibernate.repository.HibernateDaoFactory"></bean>

    <!-- UnitOfWorkFactory 인스턴스를 UnitOfWorks Singleton의 static field에 설정합니다. -->
    <bean name="unitOfWorkInitializer" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="kr.debop4j.data.hibernate.unitofwork.UnitOfWorks.setUnitOfWorkFactory"/>
        <property name="arguments">
            <list>
                <ref bean="unitOfWorkFactory"/>
            </list>
        </property>
    </bean>

</beans>